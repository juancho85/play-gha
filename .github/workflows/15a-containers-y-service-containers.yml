name: 15a - Containers y service containers
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  # run-in-container:
  #   name: Uso contenedores
  #   runs-on: ubuntu-latest
  #   container: node:16-bullseye
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: run node
  #       run: node script.js
  # container-2-container:
  #   name: Comunicación contenedor a contenedor
  #   runs-on: ubuntu-latest
  #   container: node:16-bullseye
  #   services:
  #     redis:
  #       image: redis
  #       options: >-
  #         --health-cmd "redis-cli ping"
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Install dependencies
  #       run: npm i
  #     - name: connect to redis
  #       env:
  #         REDIS_HOST: redis
  #         REDIS_PORT: 6379
  #       run: node redis.js
  vm-2-container:
    name: Comunicación VM a contenedor
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports: # Tenemos que mapear explícitamente los puertos
          - 6379:6379
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: npm i
      - name: connect to redis
        env:
          REDIS_HOST: localhost # Usamos localhost en lugar del nombre del container
          REDIS_PORT: 6379
        run: node redis.js

        